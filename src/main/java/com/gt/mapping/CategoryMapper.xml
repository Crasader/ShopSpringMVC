<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gt.dao.CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.gt.model.Category" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="hot" property="hot" jdbcType="BIT" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, hot, aid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gt.model.Category" >
    insert into category (id, type, hot, aid
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{hot,jdbcType=BIT}, #{aid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gt.model.Category" >
    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="hot != null" >
        hot,
      </if>
      <if test="aid != null" >
        aid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="hot != null" >
        #{hot,jdbcType=BIT},
      </if>
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gt.model.Category" >
    update category
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=BIT},
      </if>
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gt.model.Category" >
    update category
    set type = #{type,jdbcType=VARCHAR},
      hot = #{hot,jdbcType=BIT},
      aid = #{aid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap type="com.gt.model.Category" id="categoryAndAccount" extends="BaseResultMap">
     <association property="account" javaType="com.gt.model.Account">
	     <id property="id" column="aid"/>
	     <result property="login" column="login"/>
	     <result property="name" column="name"/>
	     <result property="pass" column="pass"/>
     </association>
  </resultMap>
  <select id="findAllCategoryAccount" parameterType="hashmap" resultMap="categoryAndAccount">
        SELECT
		category.id as id,
		category.type as type,
		category.hot as hot,
		account.id as aid,
		account.login as login,
		account.name as name,
		account.pass as pass 
		FROM
		account
	    JOIN category ON category.aid = account.id and type like #{type} limit #{page},#{size}
  </select>
  <select id="countTypeAll" parameterType="java.lang.String" resultType="int">
        select count(*) from category where type like #{type}
  </select>
  <!-- 
      category: 表名
	  id: 字段名
	  collection里表示类型，这里是array，还可以是list
	  ids不用管，相当于一个变量
  -->
  <delete id="delCategory" parameterType="list">
	delete from category where id in 
	<foreach item="ids" collection="array" open="(" separator="," close=")"> 
	#{ids}
</foreach> 
</delete>
  <resultMap type="com.gt.model.Category" id="ProductType">
  	<id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <select id="findProductType" resultMap="ProductType">
    SELECT
	category.id as id,
	category.type as type
	FROM
	category
  </select>
  <select id="getCategoryIsHot" resultMap="BaseResultMap">
     SELECT
	 *
	 FROM
	 category c where c.hot=#{cid}
  </select>
</mapper>